@prefix ex:  <http://example.org/ifc43Shapes#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

ex:PropertySet a sh:SPARQLTarget;
    sh:select """
        SELECT ?this
        WHERE {
            ?this <http://schema.omg.org/spec/XMI/2.1/type> "uml:Class" .
            ?this <http://example.org/name> ?psetName . 
            ?this <http://schema.omg.org/spec/XMI/2.1/id> ?psetId . 

            {
                ?stereo a <http://www.sparxsystems.com/profiles/thecustomprofile/1.0/PSET_TYPEDRIVENOVERRIDE> .
                ?stereo <http://example.org/base_Class> ?psetId .
            } UNION {
                ?stereo a <http://www.sparxsystems.com/profiles/thecustomprofile/1.0/PSET_PERFORMANCEDRIVEN> .
                ?stereo <http://example.org/base_Class> ?psetId .
            } UNION {
                ?stereo a <http://www.sparxsystems.com/profiles/thecustomprofile/1.0/PSET_OCCURRENCEDRIVEN> .
                ?stereo <http://example.org/base_Class> ?psetId .
            }
        }
   """ .
   
ex:PropertySetProperty a sh:SPARQLTarget;
    sh:select """
        SELECT ?this
        WHERE {
            ?pset <http://schema.omg.org/spec/XMI/2.1/type> "uml:Class" .
            ?pset <http://example.org/name> ?psetName . 
            ?pset <http://schema.omg.org/spec/XMI/2.1/id> ?psetId .
            
            ?this <http://schema.omg.org/spec/XMI/2.1/type> "uml:Property" .
            ?this <http://example.org/containedIn> ?pset .

            {
                ?stereo a <http://www.sparxsystems.com/profiles/thecustomprofile/1.0/PSET_TYPEDRIVENOVERRIDE> .
                ?stereo <http://example.org/base_Class> ?psetId .
            } UNION {
                ?stereo a <http://www.sparxsystems.com/profiles/thecustomprofile/1.0/PSET_PERFORMANCEDRIVEN> .
                ?stereo <http://example.org/base_Class> ?psetId .
            } UNION {
                ?stereo a <http://www.sparxsystems.com/profiles/thecustomprofile/1.0/PSET_OCCURRENCEDRIVEN> .
                ?stereo <http://example.org/base_Class> ?psetId .
            }
        }
   """ .
   
ex:hasApplicableClass a sh:SPARQLConstraint ;
    sh:message "The Property Set '{?psetName}' should have at least one applicability" ;
    sh:select """
        SELECT ?this ?psetName
        WHERE {
            ?this <http://schema.omg.org/spec/XMI/2.1/id> ?psetId .
            ?this <http://example.org/name> ?psetName . 
            
            FILTER NOT EXISTS {
                ?assoc <http://schema.omg.org/spec/XMI/2.1/type> "uml:AssociationClass" .
                
                ?end1 a <http://example.org/memberEnd> .
                ?end1 <http://example.org/containedIn> ?assoc .
                ?end1 <http://schema.omg.org/spec/XMI/2.1/idref> ?end1id .
                ?prop1 <http://schema.omg.org/spec/XMI/2.1/id> ?end1id .
                ?type1 <http://example.org/containedIn> ?prop1 .
                ?type1 <http://schema.omg.org/spec/XMI/2.1/idref> ?psetId .
                
                ?end2 a <http://example.org/memberEnd> .
                ?end2 <http://example.org/containedIn> ?assoc .
                ?end2 <http://schema.omg.org/spec/XMI/2.1/idref> ?end2id .
                ?prop2 <http://schema.omg.org/spec/XMI/2.1/id> ?end2id .
                ?type2 <http://example.org/containedIn> ?prop2 .
                ?type2 <http://schema.omg.org/spec/XMI/2.1/idref> ?xid .
        
                FILTER(?end1 != ?end2) .
            }
        }
    """ .
    
ex:hasPropertyType a sh:SPARQLConstraint ;
    sh:message "The Property '{?psetName}.{?propName}' has an incorrect type" ;
    sh:select """
        SELECT ?this ?propName ?psetName
        WHERE {
            ?this <http://example.org/name> ?propName . 
            ?this <http://example.org/containedIn> ?pset .
            ?pset <http://example.org/name> ?psetName .
            
            FILTER NOT EXISTS {
                ?type <http://example.org/containedIn> ?this .
                ?type a <http://example.org/type> .
                ?type <http://schema.omg.org/spec/XMI/2.1/idref> ?typeid .
                
                ?typeref a <http://example.org/packagedElement> .
                ?typeref <http://schema.omg.org/spec/XMI/2.1/id> ?typeid .
                
                ?binding a <http://example.org/templateBinding> .
                ?binding <http://example.org/containedIn> ?typeref .
                ?binding <http://example.org/boundElement> ?proptypeid .
                
                ?proptype <http://schema.omg.org/spec/XMI/2.1/id> ?proptypeid .
                ?proptype <http://example.org/containedIn> ?proppackage .
                ?proppackage <http://example.org/name> "propertytypes" .
                
                ?substitution <http://example.org/containedIn> ?binding .
                ?substitution <http://example.org/actual> ?actualid .
                
                ?actual <http://schema.omg.org/spec/XMI/2.1/id> ?actualid .
                ?actual <http://example.org/name> ?actualname .
                
                FILTER(?actualname != "UNKNOWN") .
            }
        }
    """
    .

ex:Fail a sh:SPARQLConstraint ;
    sh:message "Generic failing constraint" ;
    sh:select """
        SELECT ?this
        WHERE {
            FILTER NOT EXISTS {
            ?this <http://example.org/doesNotExist> <http://example.org/something> .
            }
        }
    """
    .

ex:PsetApplicability a sh:NodeShape ;
    sh:target ex:PropertySet;
    sh:sparql ex:Fail
    .

ex:PropertyType a sh:NodeShape ;
    sh:target ex:PropertySetProperty;
    sh:sparql ex:hasPropertyType
    .
